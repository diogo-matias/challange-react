{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"variant\", \"children\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { fontFamily } from \"../styles/fonts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function RobotoText(_ref) {\n  var style = _ref.style,\n    _ref$variant = _ref.variant,\n    variant = _ref$variant === void 0 ? 'regular' : _ref$variant,\n    children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var getFontFamily = function getFontFamily() {\n    switch (variant) {\n      case 'medium':\n        return fontFamily.medium;\n      case 'bold':\n        return fontFamily.bold;\n      case 'light':\n        return fontFamily.light;\n      default:\n        return fontFamily.regular;\n    }\n  };\n  return _jsx(Text, _objectSpread(_objectSpread({\n    style: [{\n      fontFamily: getFontFamily()\n    }, style]\n  }, props), {}, {\n    children: children\n  }));\n}","map":{"version":3,"names":["React","Text","fontFamily","jsx","_jsx","RobotoText","_ref","style","_ref$variant","variant","children","props","_objectWithoutProperties","_excluded","getFontFamily","medium","bold","light","regular","_objectSpread"],"sources":["C:/Users/diogo/OneDrive/Desktop/learning/loja-challenge/frontend/src/components/RobotoText.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Text, TextProps } from 'react-native';\r\nimport { fontFamily } from '../styles/fonts';\r\n\r\ninterface RobotoTextProps extends TextProps {\r\n  variant?: 'regular' | 'medium' | 'bold' | 'light';\r\n}\r\n\r\nexport default function RobotoText({ \r\n  style, \r\n  variant = 'regular', \r\n  children, \r\n  ...props \r\n}: RobotoTextProps) {\r\n  const getFontFamily = () => {\r\n    switch (variant) {\r\n      case 'medium':\r\n        return fontFamily.medium;\r\n      case 'bold':\r\n        return fontFamily.bold;\r\n      case 'light':\r\n        return fontFamily.light;\r\n      default:\r\n        return fontFamily.regular;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Text\r\n      style={[\r\n        { fontFamily: getFontFamily() },\r\n        style,\r\n      ]}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Text>\r\n  );\r\n} "],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAE1B,SAASC,UAAU;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAM7C,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAKd;EAAA,IAJlBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAAC,YAAA,GAAAF,IAAA,CACLG,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAG,SAAS,GAAAA,YAAA;IACnBE,QAAQ,GAAAJ,IAAA,CAARI,QAAQ;IACLC,KAAK,GAAAC,wBAAA,CAAAN,IAAA,EAAAO,SAAA;EAER,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAC1B,QAAQL,OAAO;MACb,KAAK,QAAQ;QACX,OAAOP,UAAU,CAACa,MAAM;MAC1B,KAAK,MAAM;QACT,OAAOb,UAAU,CAACc,IAAI;MACxB,KAAK,OAAO;QACV,OAAOd,UAAU,CAACe,KAAK;MACzB;QACE,OAAOf,UAAU,CAACgB,OAAO;IAC7B;EACF,CAAC;EAED,OACEd,IAAA,CAACH,IAAI,EAAAkB,aAAA,CAAAA,aAAA;IACHZ,KAAK,EAAE,CACL;MAAEL,UAAU,EAAEY,aAAa,CAAC;IAAE,CAAC,EAC/BP,KAAK;EACL,GACEI,KAAK;IAAAD,QAAA,EAERA;EAAQ,EACL,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}