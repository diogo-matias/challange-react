{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport BaseModal from \"./BaseModal\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AlertModal(_ref) {\n  var visible = _ref.visible,\n    title = _ref.title,\n    message = _ref.message,\n    onConfirm = _ref.onConfirm,\n    onCancel = _ref.onCancel,\n    _ref$confirmText = _ref.confirmText,\n    confirmText = _ref$confirmText === void 0 ? 'OK' : _ref$confirmText,\n    _ref$cancelText = _ref.cancelText,\n    cancelText = _ref$cancelText === void 0 ? 'Cancelar' : _ref$cancelText,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'info' : _ref$type,\n    _ref$showCloseButton = _ref.showCloseButton,\n    showCloseButton = _ref$showCloseButton === void 0 ? false : _ref$showCloseButton;\n  var getTypeStyles = function getTypeStyles() {\n    switch (type) {\n      case 'success':\n        return {\n          backgroundColor: '#d4edda',\n          borderColor: '#c3e6cb',\n          titleColor: '#155724',\n          messageColor: '#155724'\n        };\n      case 'error':\n        return {\n          backgroundColor: '#f8d7da',\n          borderColor: '#f5c6cb',\n          titleColor: '#721c24',\n          messageColor: '#721c24'\n        };\n      case 'warning':\n        return {\n          backgroundColor: '#fff3cd',\n          borderColor: '#ffeaa7',\n          titleColor: '#856404',\n          messageColor: '#856404'\n        };\n      default:\n        return {\n          backgroundColor: '#d1ecf1',\n          borderColor: '#bee5eb',\n          titleColor: '#0c5460',\n          messageColor: '#0c5460'\n        };\n    }\n  };\n  var typeStyles = getTypeStyles();\n  var handleClose = function handleClose() {\n    if (onCancel) {\n      onCancel();\n    } else if (onConfirm) {\n      onConfirm();\n    }\n  };\n  return _jsx(BaseModal, {\n    visible: visible,\n    title: title,\n    onClose: handleClose,\n    showCloseButton: showCloseButton,\n    children: _jsxs(View, {\n      style: [styles.alertContainer, {\n        backgroundColor: typeStyles.backgroundColor,\n        borderColor: typeStyles.borderColor\n      }],\n      children: [_jsx(Text, {\n        style: [styles.message, {\n          color: typeStyles.messageColor\n        }],\n        children: message\n      }), _jsxs(View, {\n        style: styles.footer,\n        children: [onCancel && _jsx(TouchableOpacity, {\n          style: [styles.button, styles.cancelButton],\n          onPress: onCancel,\n          children: _jsx(Text, {\n            style: styles.cancelButtonText,\n            children: cancelText\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.button, styles.confirmButton],\n          onPress: onConfirm || onCancel,\n          children: _jsx(Text, {\n            style: styles.confirmButtonText,\n            children: confirmText\n          })\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  alertContainer: {\n    backgroundColor: 'white',\n    borderRadius: 12,\n    borderWidth: 2,\n    padding: 20\n  },\n  message: {\n    fontSize: 16,\n    textAlign: 'center',\n    lineHeight: 22,\n    marginBottom: 20\n  },\n  footer: {\n    flexDirection: 'row',\n    gap: 10\n  },\n  button: {\n    flex: 1,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  cancelButton: {\n    backgroundColor: '#6c757d'\n  },\n  confirmButton: {\n    backgroundColor: '#007bff'\n  },\n  cancelButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  confirmButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600'\n  }\n});","map":{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","BaseModal","jsx","_jsx","jsxs","_jsxs","AlertModal","_ref","visible","title","message","onConfirm","onCancel","_ref$confirmText","confirmText","_ref$cancelText","cancelText","_ref$type","type","_ref$showCloseButton","showCloseButton","getTypeStyles","backgroundColor","borderColor","titleColor","messageColor","typeStyles","handleClose","onClose","children","style","styles","alertContainer","color","footer","button","cancelButton","onPress","cancelButtonText","confirmButton","confirmButtonText","create","borderRadius","borderWidth","padding","fontSize","textAlign","lineHeight","marginBottom","flexDirection","gap","flex","paddingVertical","paddingHorizontal","alignItems","fontWeight"],"sources":["C:/Users/diogo/OneDrive/Desktop/learning/loja-challenge/frontend/src/components/AlertModal.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport BaseModal from './BaseModal';\r\n\r\ninterface AlertModalProps {\r\n  visible: boolean;\r\n  title: string;\r\n  message: string;\r\n  onConfirm?: () => void;\r\n  onCancel?: () => void;\r\n  confirmText?: string;\r\n  cancelText?: string;\r\n  type?: 'info' | 'success' | 'error' | 'warning';\r\n  showCloseButton?: boolean;\r\n}\r\n\r\nexport default function AlertModal({\r\n  visible,\r\n  title,\r\n  message,\r\n  onConfirm,\r\n  onCancel,\r\n  confirmText = 'OK',\r\n  cancelText = 'Cancelar',\r\n  type = 'info',\r\n  showCloseButton = false,\r\n}: AlertModalProps) {\r\n  const getTypeStyles = () => {\r\n    switch (type) {\r\n      case 'success':\r\n        return {\r\n          backgroundColor: '#d4edda',\r\n          borderColor: '#c3e6cb',\r\n          titleColor: '#155724',\r\n          messageColor: '#155724',\r\n        };\r\n      case 'error':\r\n        return {\r\n          backgroundColor: '#f8d7da',\r\n          borderColor: '#f5c6cb',\r\n          titleColor: '#721c24',\r\n          messageColor: '#721c24',\r\n        };\r\n      case 'warning':\r\n        return {\r\n          backgroundColor: '#fff3cd',\r\n          borderColor: '#ffeaa7',\r\n          titleColor: '#856404',\r\n          messageColor: '#856404',\r\n        };\r\n      default:\r\n        return {\r\n          backgroundColor: '#d1ecf1',\r\n          borderColor: '#bee5eb',\r\n          titleColor: '#0c5460',\r\n          messageColor: '#0c5460',\r\n        };\r\n    }\r\n  };\r\n\r\n  const typeStyles = getTypeStyles();\r\n\r\n  const handleClose = () => {\r\n    if (onCancel) {\r\n      onCancel();\r\n    } else if (onConfirm) {\r\n      onConfirm();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BaseModal\r\n      visible={visible}\r\n      title={title}\r\n      onClose={handleClose}\r\n      showCloseButton={showCloseButton}\r\n    >\r\n      <View style={[styles.alertContainer, { backgroundColor: typeStyles.backgroundColor, borderColor: typeStyles.borderColor }]}>\r\n        <Text style={[styles.message, { color: typeStyles.messageColor }]}>\r\n          {message}\r\n        </Text>\r\n        \r\n        <View style={styles.footer}>\r\n          {onCancel && (\r\n            <TouchableOpacity\r\n              style={[styles.button, styles.cancelButton]}\r\n              onPress={onCancel}\r\n            >\r\n              <Text style={styles.cancelButtonText}>{cancelText}</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          \r\n          <TouchableOpacity\r\n            style={[styles.button, styles.confirmButton]}\r\n            onPress={onConfirm || onCancel}\r\n          >\r\n            <Text style={styles.confirmButtonText}>{confirmText}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </BaseModal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  alertContainer: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 12,\r\n    borderWidth: 2,\r\n    padding: 20,\r\n  },\r\n  message: {\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n    lineHeight: 22,\r\n    marginBottom: 20,\r\n  },\r\n  footer: {\r\n    flexDirection: 'row',\r\n    gap: 10,\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n  },\r\n  cancelButton: {\r\n    backgroundColor: '#6c757d',\r\n  },\r\n  confirmButton: {\r\n    backgroundColor: '#007bff',\r\n  },\r\n  cancelButtonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n  },\r\n  confirmButtonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n  },\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}