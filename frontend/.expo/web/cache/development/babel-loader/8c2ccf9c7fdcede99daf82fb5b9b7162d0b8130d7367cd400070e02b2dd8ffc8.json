{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width;\nexport default function CustomModal(_ref) {\n  var visible = _ref.visible,\n    title = _ref.title,\n    message = _ref.message,\n    onConfirm = _ref.onConfirm,\n    onCancel = _ref.onCancel,\n    _ref$confirmText = _ref.confirmText,\n    confirmText = _ref$confirmText === void 0 ? 'OK' : _ref$confirmText,\n    _ref$cancelText = _ref.cancelText,\n    cancelText = _ref$cancelText === void 0 ? 'Cancelar' : _ref$cancelText,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'info' : _ref$type;\n  var getTypeStyles = function getTypeStyles() {\n    switch (type) {\n      case 'success':\n        return {\n          backgroundColor: '#d4edda',\n          borderColor: '#c3e6cb',\n          titleColor: '#155724'\n        };\n      case 'error':\n        return {\n          backgroundColor: '#f8d7da',\n          borderColor: '#f5c6cb',\n          titleColor: '#721c24'\n        };\n      case 'warning':\n        return {\n          backgroundColor: '#fff3cd',\n          borderColor: '#ffeaa7',\n          titleColor: '#856404'\n        };\n      default:\n        return {\n          backgroundColor: '#d1ecf1',\n          borderColor: '#bee5eb',\n          titleColor: '#0c5460'\n        };\n    }\n  };\n  var typeStyles = getTypeStyles();\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onCancel,\n    children: _jsx(View, {\n      style: styles.overlay,\n      children: _jsxs(View, {\n        style: [styles.modalContainer, {\n          backgroundColor: typeStyles.backgroundColor,\n          borderColor: typeStyles.borderColor\n        }],\n        children: [_jsx(View, {\n          style: styles.header,\n          children: _jsx(Text, {\n            style: [styles.title, {\n              color: typeStyles.titleColor\n            }],\n            children: title\n          })\n        }), _jsx(View, {\n          style: styles.content,\n          children: _jsx(Text, {\n            style: styles.message,\n            children: message\n          })\n        }), _jsxs(View, {\n          style: styles.footer,\n          children: [onCancel && _jsx(TouchableOpacity, {\n            style: [styles.button, styles.cancelButton],\n            onPress: onCancel,\n            children: _jsx(Text, {\n              style: styles.cancelButtonText,\n              children: cancelText\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.button, styles.confirmButton],\n            onPress: onConfirm || onCancel,\n            children: _jsx(Text, {\n              style: styles.confirmButtonText,\n              children: confirmText\n            })\n          })]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  overlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContainer: {\n    width: width * 0.85,\n    maxWidth: 400,\n    backgroundColor: 'white',\n    borderRadius: 12,\n    borderWidth: 2,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  header: {\n    padding: 20,\n    paddingBottom: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(0, 0, 0, 0.1)'\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  content: {\n    padding: 20,\n    paddingTop: 15,\n    paddingBottom: 15\n  },\n  message: {\n    fontSize: 16,\n    textAlign: 'center',\n    lineHeight: 22,\n    color: '#333'\n  },\n  footer: {\n    flexDirection: 'row',\n    padding: 20,\n    paddingTop: 10,\n    gap: 10\n  },\n  button: {\n    flex: 1,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  cancelButton: {\n    backgroundColor: '#6c757d'\n  },\n  confirmButton: {\n    backgroundColor: '#007bff'\n  },\n  cancelButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  confirmButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600'\n  }\n});","map":{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","Modal","Dimensions","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","CustomModal","_ref","visible","title","message","onConfirm","onCancel","_ref$confirmText","confirmText","_ref$cancelText","cancelText","_ref$type","type","getTypeStyles","backgroundColor","borderColor","titleColor","typeStyles","transparent","animationType","onRequestClose","children","style","styles","overlay","modalContainer","header","color","content","footer","button","cancelButton","onPress","cancelButtonText","confirmButton","confirmButtonText","create","flex","justifyContent","alignItems","maxWidth","borderRadius","borderWidth","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","padding","paddingBottom","borderBottomWidth","borderBottomColor","fontSize","fontWeight","textAlign","paddingTop","lineHeight","flexDirection","gap","paddingVertical","paddingHorizontal"],"sources":["C:/Users/diogo/OneDrive/Desktop/learning/loja-challenge/frontend/src/components/CustomModal.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Modal,\r\n  Dimensions,\r\n} from 'react-native';\r\n\r\ninterface CustomModalProps {\r\n  visible: boolean;\r\n  title: string;\r\n  message: string;\r\n  onConfirm?: () => void;\r\n  onCancel?: () => void;\r\n  confirmText?: string;\r\n  cancelText?: string;\r\n  type?: 'info' | 'success' | 'error' | 'warning';\r\n}\r\n\r\nconst { width } = Dimensions.get('window');\r\n\r\nexport default function CustomModal({\r\n  visible,\r\n  title,\r\n  message,\r\n  onConfirm,\r\n  onCancel,\r\n  confirmText = 'OK',\r\n  cancelText = 'Cancelar',\r\n  type = 'info',\r\n}: CustomModalProps) {\r\n  const getTypeStyles = () => {\r\n    switch (type) {\r\n      case 'success':\r\n        return {\r\n          backgroundColor: '#d4edda',\r\n          borderColor: '#c3e6cb',\r\n          titleColor: '#155724',\r\n        };\r\n      case 'error':\r\n        return {\r\n          backgroundColor: '#f8d7da',\r\n          borderColor: '#f5c6cb',\r\n          titleColor: '#721c24',\r\n        };\r\n      case 'warning':\r\n        return {\r\n          backgroundColor: '#fff3cd',\r\n          borderColor: '#ffeaa7',\r\n          titleColor: '#856404',\r\n        };\r\n      default:\r\n        return {\r\n          backgroundColor: '#d1ecf1',\r\n          borderColor: '#bee5eb',\r\n          titleColor: '#0c5460',\r\n        };\r\n    }\r\n  };\r\n\r\n  const typeStyles = getTypeStyles();\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      transparent\r\n      animationType=\"fade\"\r\n      onRequestClose={onCancel}\r\n    >\r\n      <View style={styles.overlay}>\r\n        <View style={[styles.modalContainer, { backgroundColor: typeStyles.backgroundColor, borderColor: typeStyles.borderColor }]}>\r\n          <View style={styles.header}>\r\n            <Text style={[styles.title, { color: typeStyles.titleColor }]}>\r\n              {title}\r\n            </Text>\r\n          </View>\r\n          \r\n          <View style={styles.content}>\r\n            <Text style={styles.message}>{message}</Text>\r\n          </View>\r\n          \r\n          <View style={styles.footer}>\r\n            {onCancel && (\r\n              <TouchableOpacity\r\n                style={[styles.button, styles.cancelButton]}\r\n                onPress={onCancel}\r\n              >\r\n                <Text style={styles.cancelButtonText}>{cancelText}</Text>\r\n              </TouchableOpacity>\r\n            )}\r\n            \r\n            <TouchableOpacity\r\n              style={[styles.button, styles.confirmButton]}\r\n              onPress={onConfirm || onCancel}\r\n            >\r\n              <Text style={styles.confirmButtonText}>{confirmText}</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  overlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  modalContainer: {\r\n    width: width * 0.85,\r\n    maxWidth: 400,\r\n    backgroundColor: 'white',\r\n    borderRadius: 12,\r\n    borderWidth: 2,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  header: {\r\n    padding: 20,\r\n    paddingBottom: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: 'rgba(0, 0, 0, 0.1)',\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  content: {\r\n    padding: 20,\r\n    paddingTop: 15,\r\n    paddingBottom: 15,\r\n  },\r\n  message: {\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n    lineHeight: 22,\r\n    color: '#333',\r\n  },\r\n  footer: {\r\n    flexDirection: 'row',\r\n    padding: 20,\r\n    paddingTop: 10,\r\n    gap: 10,\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n  },\r\n  cancelButton: {\r\n    backgroundColor: '#6c757d',\r\n  },\r\n  confirmButton: {\r\n    backgroundColor: '#007bff',\r\n  },\r\n  cancelButtonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n  },\r\n  confirmButtonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n  },\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}