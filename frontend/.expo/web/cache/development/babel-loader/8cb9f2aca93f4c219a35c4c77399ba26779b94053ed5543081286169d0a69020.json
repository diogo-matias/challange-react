{"ast":null,"code":"import React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport { fetchVendasByCliente } from \"../store/slices/vendasSlice\";\nimport BaseModal from \"./BaseModal\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function VendasModal(_ref) {\n  var visible = _ref.visible,\n    onClose = _ref.onClose,\n    clienteId = _ref.clienteId,\n    clienteNome = _ref.clienteNome,\n    onAddVenda = _ref.onAddVenda;\n  var dispatch = useAppDispatch();\n  var _useAppSelector = useAppSelector(function (state) {\n      return state.vendas;\n    }),\n    vendas = _useAppSelector.vendas,\n    isLoading = _useAppSelector.isLoading;\n  useEffect(function () {\n    if (visible && clienteId) {\n      dispatch(fetchVendasByCliente(clienteId));\n    }\n  }, [visible, clienteId, dispatch]);\n  var formatCurrency = function formatCurrency(value) {\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(value);\n  };\n  var formatDate = function formatDate(dateString) {\n    return new Date(dateString).toLocaleDateString('pt-BR');\n  };\n  var renderVenda = function renderVenda(_ref2) {\n    var item = _ref2.item;\n    return _jsx(View, {\n      style: styles.vendaItem,\n      children: _jsxs(View, {\n        style: styles.vendaHeader,\n        children: [_jsx(Text, {\n          style: styles.vendaDate,\n          children: formatDate(item.data)\n        }), _jsx(Text, {\n          style: styles.vendaValue,\n          children: formatCurrency(item.valor)\n        })]\n      })\n    });\n  };\n  var totalVendas = vendas.reduce(function (sum, venda) {\n    return sum + venda.valor;\n  }, 0);\n  return _jsxs(BaseModal, {\n    visible: visible,\n    title: `Vendas - ${clienteNome}`,\n    onClose: onClose,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsxs(Text, {\n        style: styles.totalText,\n        children: [\"Total: \", formatCurrency(totalVendas)]\n      }), _jsx(TouchableOpacity, {\n        style: styles.addButton,\n        onPress: onAddVenda,\n        children: _jsx(Text, {\n          style: styles.addButtonText,\n          children: \"+ Nova Venda\"\n        })\n      })]\n    }), isLoading ? _jsx(View, {\n      style: styles.loadingContainer,\n      children: _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Carregando vendas...\"\n      })\n    }) : vendas.length === 0 ? _jsx(View, {\n      style: styles.emptyContainer,\n      children: _jsx(Text, {\n        style: styles.emptyText,\n        children: \"Nenhuma venda encontrada\"\n      })\n    }) : _jsx(FlatList, {\n      data: vendas,\n      renderItem: renderVenda,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      showsVerticalScrollIndicator: false,\n      style: styles.list\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  totalText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#2c3e50'\n  },\n  addButton: {\n    backgroundColor: '#27ae60',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 8\n  },\n  addButtonText: {\n    color: '#fff',\n    fontSize: 14,\n    fontWeight: '600'\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 40\n  },\n  loadingText: {\n    fontSize: 16,\n    color: '#7f8c8d'\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 40\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#7f8c8d'\n  },\n  list: {\n    flex: 1\n  },\n  vendaItem: {\n    backgroundColor: '#f8f9fa',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 8\n  },\n  vendaHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  vendaDate: {\n    fontSize: 14,\n    color: '#2c3e50',\n    fontWeight: '500'\n  },\n  vendaValue: {\n    fontSize: 16,\n    color: '#27ae60',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useEffect","View","Text","StyleSheet","FlatList","TouchableOpacity","useAppDispatch","useAppSelector","fetchVendasByCliente","BaseModal","jsx","_jsx","jsxs","_jsxs","VendasModal","_ref","visible","onClose","clienteId","clienteNome","onAddVenda","dispatch","_useAppSelector","state","vendas","isLoading","formatCurrency","value","Intl","NumberFormat","style","currency","format","formatDate","dateString","Date","toLocaleDateString","renderVenda","_ref2","item","styles","vendaItem","children","vendaHeader","vendaDate","data","vendaValue","valor","totalVendas","reduce","sum","venda","title","header","totalText","addButton","onPress","addButtonText","loadingContainer","loadingText","length","emptyContainer","emptyText","renderItem","keyExtractor","id","toString","showsVerticalScrollIndicator","list","create","flexDirection","justifyContent","alignItems","marginBottom","fontSize","fontWeight","color","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","flex","padding"],"sources":["C:/Users/diogo/OneDrive/Desktop/learning/loja-challenge/frontend/src/components/VendasModal.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  FlatList,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\r\nimport { fetchVendasByCliente } from '../store/slices/vendasSlice';\r\nimport BaseModal from './BaseModal';\r\nimport { Venda } from '../store/types';\r\n\r\ninterface VendasModalProps {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n  clienteId: number;\r\n  clienteNome: string;\r\n  onAddVenda: () => void;\r\n}\r\n\r\nexport default function VendasModal({\r\n  visible,\r\n  onClose,\r\n  clienteId,\r\n  clienteNome,\r\n  onAddVenda,\r\n}: VendasModalProps) {\r\n  const dispatch = useAppDispatch();\r\n  const { vendas, isLoading } = useAppSelector(state => state.vendas);\r\n\r\n  useEffect(() => {\r\n    if (visible && clienteId) {\r\n      dispatch(fetchVendasByCliente(clienteId));\r\n    }\r\n  }, [visible, clienteId, dispatch]);\r\n\r\n  const formatCurrency = (value: number): string => {\r\n    return new Intl.NumberFormat('pt-BR', {\r\n      style: 'currency',\r\n      currency: 'BRL',\r\n    }).format(value);\r\n  };\r\n\r\n  const formatDate = (dateString: string): string => {\r\n    return new Date(dateString).toLocaleDateString('pt-BR');\r\n  };\r\n\r\n  const renderVenda = ({ item }: { item: Venda }) => (\r\n    <View style={styles.vendaItem}>\r\n      <View style={styles.vendaHeader}>\r\n        <Text style={styles.vendaDate}>{formatDate(item.data)}</Text>\r\n        <Text style={styles.vendaValue}>{formatCurrency(item.valor)}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  const totalVendas = vendas.reduce((sum, venda) => sum + venda.valor, 0);\r\n\r\n  return (\r\n    <BaseModal\r\n      visible={visible}\r\n      title={`Vendas - ${clienteNome}`}\r\n      onClose={onClose}\r\n    >\r\n      <View style={styles.header}>\r\n        <Text style={styles.totalText}>\r\n          Total: {formatCurrency(totalVendas)}\r\n        </Text>\r\n        <TouchableOpacity style={styles.addButton} onPress={onAddVenda}>\r\n          <Text style={styles.addButtonText}>+ Nova Venda</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {isLoading ? (\r\n        <View style={styles.loadingContainer}>\r\n          <Text style={styles.loadingText}>Carregando vendas...</Text>\r\n        </View>\r\n      ) : vendas.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>Nenhuma venda encontrada</Text>\r\n        </View>\r\n      ) : (\r\n        <FlatList\r\n          data={vendas}\r\n          renderItem={renderVenda}\r\n          keyExtractor={(item) => item.id.toString()}\r\n          showsVerticalScrollIndicator={false}\r\n          style={styles.list}\r\n        />\r\n      )}\r\n    </BaseModal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  totalText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#2c3e50',\r\n  },\r\n  addButton: {\r\n    backgroundColor: '#27ae60',\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    borderRadius: 8,\r\n  },\r\n  addButtonText: {\r\n    color: '#fff',\r\n    fontSize: 14,\r\n    fontWeight: '600',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingVertical: 40,\r\n  },\r\n  loadingText: {\r\n    fontSize: 16,\r\n    color: '#7f8c8d',\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingVertical: 40,\r\n  },\r\n  emptyText: {\r\n    fontSize: 16,\r\n    color: '#7f8c8d',\r\n  },\r\n  list: {\r\n    flex: 1,\r\n  },\r\n  vendaItem: {\r\n    backgroundColor: '#f8f9fa',\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    marginBottom: 8,\r\n  },\r\n  vendaHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  vendaDate: {\r\n    fontSize: 14,\r\n    color: '#2c3e50',\r\n    fontWeight: '500',\r\n  },\r\n  vendaValue: {\r\n    fontSize: 16,\r\n    color: '#27ae60',\r\n    fontWeight: 'bold',\r\n  },\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}