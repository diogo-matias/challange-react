{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport { logout } from \"../store/slices/authSlice\";\nimport { fetchClientes, setSelectedCliente, clearSelectedCliente, createCliente } from \"../store/slices/clientesSlice\";\nimport { fetchVendasPorDia, fetchEstatisticas } from \"../store/slices/vendasSlice\";\nimport { openModal, closeModal } from \"../store/slices/uiSlice\";\nimport ClientesList from \"../components/ClientesList\";\nimport EstatisticasCard from \"../components/EstatisticasCard\";\nimport VendasChart from \"../components/VendasChart\";\nimport AddClienteModal from \"../components/AddClienteModal\";\nimport VendasModal from \"../components/VendasModal\";\nimport AddVendaModal from \"../components/AddVendaModal\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nexport default function DashboardScreen() {\n  var dispatch = useAppDispatch();\n  var _useAppSelector = useAppSelector(function (state) {\n      return state.clientes;\n    }),\n    clientes = _useAppSelector.clientes,\n    selectedCliente = _useAppSelector.selectedCliente,\n    clientesLoading = _useAppSelector.isLoading;\n  var _useAppSelector2 = useAppSelector(function (state) {\n      return state.vendas;\n    }),\n    vendasPorDia = _useAppSelector2.vendasPorDia,\n    estatisticas = _useAppSelector2.estatisticas,\n    vendasLoading = _useAppSelector2.isLoading;\n  var _useAppSelector3 = useAppSelector(function (state) {\n      return state.ui;\n    }),\n    modals = _useAppSelector3.modals,\n    loading = _useAppSelector3.loading;\n  useEffect(function () {\n    loadData();\n  }, []);\n  var loadData = function () {\n    var _ref = _asyncToGenerator(function* () {\n      yield Promise.all([dispatch(fetchClientes()), dispatch(fetchEstatisticas()), dispatch(fetchVendasPorDia())]);\n    });\n    return function loadData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleLogout = function handleLogout() {\n    dispatch(logout());\n  };\n  var handleAddCliente = function handleAddCliente() {\n    dispatch(openModal('addCliente'));\n  };\n  var handleViewVendas = function handleViewVendas(cliente) {\n    dispatch(setSelectedCliente(cliente));\n    dispatch(openModal('vendas'));\n  };\n  var handleAddVenda = function handleAddVenda() {\n    dispatch(openModal('addVenda'));\n  };\n  var getFirstMissingLetter = function getFirstMissingLetter(nome) {\n    var alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    var nomeLower = nome.toLowerCase();\n    for (var letter of alphabet) {\n      if (!nomeLower.includes(letter)) {\n        return letter.toUpperCase();\n      }\n    }\n    return '-';\n  };\n  var isLoading = clientesLoading || vendasLoading;\n  if (isLoading) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Carregando...\"\n      })\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.iphoneFrame,\n      children: _jsxs(View, {\n        style: styles.iphoneScreen,\n        children: [_jsxs(View, {\n          style: styles.header,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"Loja de Brinquedos\"\n          }), _jsx(TouchableOpacity, {\n            style: styles.logoutButton,\n            onPress: handleLogout,\n            children: _jsx(Text, {\n              style: styles.logoutText,\n              children: \"Sair\"\n            })\n          })]\n        }), _jsx(ScrollView, {\n          style: styles.scrollView,\n          refreshControl: _jsx(RefreshControl, {\n            refreshing: isLoading,\n            onRefresh: loadData\n          }),\n          children: _jsxs(View, {\n            style: styles.content,\n            children: [_jsx(TouchableOpacity, {\n              style: styles.addButton,\n              onPress: handleAddCliente,\n              children: _jsx(Text, {\n                style: styles.addButtonText,\n                children: \"+ Adicionar Cliente\"\n              })\n            }), estatisticas && _jsx(EstatisticasCard, {\n              estatisticas: estatisticas\n            }), vendasPorDia.length > 0 && _jsx(VendasChart, {\n              vendasPorDia: vendasPorDia\n            }), _jsx(ClientesList, {\n              clientes: clientes,\n              getFirstMissingLetter: getFirstMissingLetter,\n              onRefresh: function onRefresh() {\n                return dispatch(fetchClientes());\n              },\n              onViewVendas: handleViewVendas\n            })]\n          })\n        })]\n      })\n    }), _jsx(AddClienteModal, {\n      visible: modals.addCliente,\n      onClose: function onClose() {\n        return dispatch(closeModal('addCliente'));\n      },\n      onAdd: function onAdd(cliente) {\n        dispatch(createCliente(cliente));\n        dispatch(closeModal('addCliente'));\n      },\n      isLoading: loading.addingCliente\n    }), selectedCliente && _jsx(VendasModal, {\n      visible: modals.vendas,\n      onClose: function onClose() {\n        dispatch(closeModal('vendas'));\n        dispatch(clearSelectedCliente());\n      },\n      clienteId: selectedCliente.id,\n      clienteNome: selectedCliente.nomeCompleto,\n      onAddVenda: handleAddVenda\n    }), selectedCliente && _jsx(AddVendaModal, {\n      visible: modals.addVenda,\n      clienteId: selectedCliente.id,\n      clienteNome: selectedCliente.nomeCompleto,\n      onSuccess: function onSuccess() {\n        dispatch(closeModal('addVenda'));\n        loadData();\n      },\n      isLoading: loading.addingVenda\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f0f0f0',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  iphoneFrame: {\n    width: Math.min(width * 0.9, 375),\n    height: Math.min(height * 0.9, 812),\n    backgroundColor: '#000',\n    borderRadius: 40,\n    padding: 8,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 10\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 20,\n    elevation: 10\n  },\n  iphoneScreen: {\n    flex: 1,\n    backgroundColor: '#fff',\n    borderRadius: 32,\n    overflow: 'hidden',\n    position: 'relative'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingTop: 50,\n    paddingBottom: 20,\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e1e8ed'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#2c3e50',\n    fontFamily: 'Roboto'\n  },\n  logoutButton: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    backgroundColor: '#e74c3c',\n    borderRadius: 8\n  },\n  logoutText: {\n    color: '#fff',\n    fontSize: 14,\n    fontWeight: '600'\n  },\n  scrollView: {\n    flex: 1\n  },\n  content: {\n    padding: 20\n  },\n  addButton: {\n    backgroundColor: '#27ae60',\n    padding: 16,\n    borderRadius: 12,\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  addButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  loadingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    marginTop: 50,\n    color: '#7f8c8d'\n  }\n});","map":{"version":3,"names":["React","useEffect","View","Text","StyleSheet","ScrollView","TouchableOpacity","RefreshControl","Dimensions","useAppDispatch","useAppSelector","logout","fetchClientes","setSelectedCliente","clearSelectedCliente","createCliente","fetchVendasPorDia","fetchEstatisticas","openModal","closeModal","ClientesList","EstatisticasCard","VendasChart","AddClienteModal","VendasModal","AddVendaModal","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","DashboardScreen","dispatch","_useAppSelector","state","clientes","selectedCliente","clientesLoading","isLoading","_useAppSelector2","vendas","vendasPorDia","estatisticas","vendasLoading","_useAppSelector3","ui","modals","loading","loadData","_ref","_asyncToGenerator","Promise","all","apply","arguments","handleLogout","handleAddCliente","handleViewVendas","cliente","handleAddVenda","getFirstMissingLetter","nome","alphabet","nomeLower","toLowerCase","letter","includes","toUpperCase","style","styles","container","children","loadingText","iphoneFrame","iphoneScreen","header","title","logoutButton","onPress","logoutText","scrollView","refreshControl","refreshing","onRefresh","content","addButton","addButtonText","length","onViewVendas","visible","addCliente","onClose","onAdd","addingCliente","clienteId","id","clienteNome","nomeCompleto","onAddVenda","addVenda","onSuccess","addingVenda","create","flex","backgroundColor","justifyContent","alignItems","Math","min","borderRadius","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","overflow","position","flexDirection","paddingHorizontal","paddingTop","paddingBottom","borderBottomWidth","borderBottomColor","fontSize","fontWeight","color","fontFamily","paddingVertical","marginBottom","textAlign","marginTop"],"sources":["C:/Users/diogo/OneDrive/Desktop/learning/loja-challenge/frontend/src/screens/DashboardScreen.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  RefreshControl,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\r\nimport { logout } from '../store/slices/authSlice';\r\nimport { \r\n  fetchClientes, \r\n  setSelectedCliente, \r\n  clearSelectedCliente,\r\n  createCliente\r\n} from '../store/slices/clientesSlice';\r\nimport { \r\n  fetchVendasPorDia, \r\n  fetchEstatisticas \r\n} from '../store/slices/vendasSlice';\r\nimport { openModal, closeModal } from '../store/slices/uiSlice';\r\nimport ClientesList from '../components/ClientesList';\r\nimport EstatisticasCard from '../components/EstatisticasCard';\r\nimport VendasChart from '../components/VendasChart';\r\nimport AddClienteModal from '../components/AddClienteModal';\r\nimport VendasModal from '../components/VendasModal';\r\nimport AddVendaModal from '../components/AddVendaModal';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nexport default function DashboardScreen() {\r\n  const dispatch = useAppDispatch();\r\n  const { clientes, selectedCliente, isLoading: clientesLoading } = useAppSelector((state: any) => state.clientes);\r\n  const { vendasPorDia, estatisticas, isLoading: vendasLoading } = useAppSelector((state: any) => state.vendas);\r\n  const { modals, loading } = useAppSelector((state: any) => state.ui);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    await Promise.all([\r\n      dispatch(fetchClientes()),\r\n      dispatch(fetchEstatisticas()),\r\n      dispatch(fetchVendasPorDia()),\r\n    ]);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const handleAddCliente = () => {\r\n    dispatch(openModal('addCliente'));\r\n  };\r\n\r\n  const handleViewVendas = (cliente: any) => {\r\n    dispatch(setSelectedCliente(cliente));\r\n    dispatch(openModal('vendas'));\r\n  };\r\n\r\n  const handleAddVenda = () => {\r\n    dispatch(openModal('addVenda'));\r\n  };\r\n\r\n  const getFirstMissingLetter = (nome: string): string => {\r\n    const alphabet = 'abcdefghijklmnopqrstuvwxyz';\r\n    const nomeLower = nome.toLowerCase();\r\n    \r\n    for (let letter of alphabet) {\r\n      if (!nomeLower.includes(letter)) {\r\n        return letter.toUpperCase();\r\n      }\r\n    }\r\n    return '-';\r\n  };\r\n\r\n  const isLoading = clientesLoading || vendasLoading;\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.loadingText}>Carregando...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.iphoneFrame}>\r\n        <View style={styles.iphoneScreen}>\r\n          <View style={styles.header}>\r\n            <Text style={styles.title}>Loja de Brinquedos</Text>\r\n            <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>\r\n              <Text style={styles.logoutText}>Sair</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <ScrollView\r\n            style={styles.scrollView}\r\n            refreshControl={\r\n              <RefreshControl refreshing={isLoading} onRefresh={loadData} />\r\n            }\r\n          >\r\n            <View style={styles.content}>\r\n              <TouchableOpacity\r\n                style={styles.addButton}\r\n                onPress={handleAddCliente}\r\n              >\r\n                <Text style={styles.addButtonText}>+ Adicionar Cliente</Text>\r\n              </TouchableOpacity>\r\n\r\n              {estatisticas && (\r\n                <EstatisticasCard estatisticas={estatisticas} />\r\n              )}\r\n\r\n              {vendasPorDia.length > 0 && (\r\n                <VendasChart vendasPorDia={vendasPorDia} />\r\n              )}\r\n\r\n              <ClientesList\r\n                clientes={clientes}\r\n                getFirstMissingLetter={getFirstMissingLetter}\r\n                onRefresh={() => dispatch(fetchClientes())}\r\n                onViewVendas={handleViewVendas}\r\n              />\r\n            </View>\r\n          </ScrollView>\r\n        </View>\r\n      </View>\r\n\r\n      <AddClienteModal\r\n        visible={modals.addCliente}\r\n        onClose={() => dispatch(closeModal('addCliente'))}\r\n        onAdd={(cliente) => {\r\n          dispatch(createCliente(cliente));\r\n          dispatch(closeModal('addCliente'));\r\n        }}\r\n        isLoading={loading.addingCliente}\r\n      />\r\n\r\n      {selectedCliente && (\r\n        <VendasModal\r\n          visible={modals.vendas}\r\n          onClose={() => {\r\n            dispatch(closeModal('vendas'));\r\n            dispatch(clearSelectedCliente());\r\n          }}\r\n          clienteId={selectedCliente.id}\r\n          clienteNome={selectedCliente.nomeCompleto}\r\n          onAddVenda={handleAddVenda}\r\n        />\r\n      )}\r\n\r\n      {selectedCliente && (\r\n        <AddVendaModal\r\n          visible={modals.addVenda}\r\n          clienteId={selectedCliente.id}\r\n          clienteNome={selectedCliente.nomeCompleto}\r\n          onSuccess={() => {\r\n            dispatch(closeModal('addVenda'));\r\n            loadData();\r\n          }}\r\n          isLoading={loading.addingVenda}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f0f0f0',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  iphoneFrame: {\r\n    width: Math.min(width * 0.9, 375),\r\n    height: Math.min(height * 0.9, 812),\r\n    backgroundColor: '#000',\r\n    borderRadius: 40,\r\n    padding: 8,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 10,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 20,\r\n    elevation: 10,\r\n  },\r\n  iphoneScreen: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 32,\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n    backgroundColor: '#fff',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#e1e8ed',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#2c3e50',\r\n    fontFamily: 'Roboto',\r\n  },\r\n  logoutButton: {\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    backgroundColor: '#e74c3c',\r\n    borderRadius: 8,\r\n  },\r\n  logoutText: {\r\n    color: '#fff',\r\n    fontSize: 14,\r\n    fontWeight: '600',\r\n  },\r\n  scrollView: {\r\n    flex: 1,\r\n  },\r\n  content: {\r\n    padding: 20,\r\n  },\r\n  addButton: {\r\n    backgroundColor: '#27ae60',\r\n    padding: 16,\r\n    borderRadius: 12,\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  addButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n  },\r\n  loadingText: {\r\n    fontSize: 18,\r\n    textAlign: 'center',\r\n    marginTop: 50,\r\n    color: '#7f8c8d',\r\n  },\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}