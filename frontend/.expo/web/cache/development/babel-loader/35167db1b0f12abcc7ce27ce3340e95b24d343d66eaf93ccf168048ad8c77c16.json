{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DatePicker(_ref) {\n  var value = _ref.value,\n    onChange = _ref.onChange,\n    placeholder = _ref.placeholder,\n    error = _ref.error;\n  var formatDateForDisplay = function formatDateForDisplay(dateString) {\n    if (!dateString) return '';\n    if (dateString.includes('-')) {\n      var _dateString$split = dateString.split('-'),\n        _dateString$split2 = _slicedToArray(_dateString$split, 3),\n        year = _dateString$split2[0],\n        month = _dateString$split2[1],\n        day = _dateString$split2[2];\n      return `${day}/${month}/${year}`;\n    }\n    return dateString;\n  };\n  var formatDateForBackend = function formatDateForBackend(dateString) {\n    if (!dateString) return '';\n    if (dateString.includes('/')) {\n      var _dateString$split3 = dateString.split('/'),\n        _dateString$split4 = _slicedToArray(_dateString$split3, 3),\n        day = _dateString$split4[0],\n        month = _dateString$split4[1],\n        year = _dateString$split4[2];\n      return `${year}-${month}-${day}`;\n    }\n    return dateString;\n  };\n  var handleDateChange = function handleDateChange(text) {\n    var cleaned = text.replace(/[^0-9]/g, '');\n    var formatted = '';\n    if (cleaned.length <= 2) {\n      formatted = cleaned;\n    } else if (cleaned.length <= 4) {\n      formatted = `${cleaned.slice(0, 2)}/${cleaned.slice(2)}`;\n    } else if (cleaned.length <= 8) {\n      formatted = `${cleaned.slice(0, 2)}/${cleaned.slice(2, 4)}/${cleaned.slice(4, 8)}`;\n    }\n    onChange(formatted);\n  };\n  var displayValue = formatDateForDisplay(value);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: [styles.input, error ? styles.inputError : null],\n      value: displayValue,\n      onChangeText: handleDateChange,\n      placeholder: placeholder || 'DD/MM/AAAA',\n      keyboardType: \"numeric\",\n      maxLength: 10\n    }), error && _jsx(Text, {\n      style: styles.errorText,\n      children: error\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginBottom: 16\n  },\n  input: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    fontSize: 16,\n    borderWidth: 1,\n    borderColor: '#e1e8ed'\n  },\n  inputError: {\n    borderColor: '#e74c3c'\n  },\n  errorText: {\n    color: '#e74c3c',\n    fontSize: 12,\n    marginTop: 4,\n    marginLeft: 4\n  }\n});","map":{"version":3,"names":["React","View","Text","TextInput","StyleSheet","jsx","_jsx","jsxs","_jsxs","DatePicker","_ref","value","onChange","placeholder","error","formatDateForDisplay","dateString","includes","_dateString$split","split","_dateString$split2","_slicedToArray","year","month","day","formatDateForBackend","_dateString$split3","_dateString$split4","handleDateChange","text","cleaned","replace","formatted","length","slice","displayValue","style","styles","container","children","input","inputError","onChangeText","keyboardType","maxLength","errorText","create","marginBottom","backgroundColor","borderRadius","padding","fontSize","borderWidth","borderColor","color","marginTop","marginLeft"],"sources":["C:/Users/diogo/OneDrive/Desktop/learning/loja-challenge/frontend/src/components/DatePicker.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  StyleSheet,\r\n} from 'react-native';\r\n\r\ninterface DatePickerProps {\r\n  value: string;\r\n  onChange: (date: string) => void;\r\n  placeholder?: string;\r\n  error?: string;\r\n}\r\n\r\nexport default function DatePicker({ value, onChange, placeholder, error }: DatePickerProps) {\r\n  const formatDateForDisplay = (dateString: string): string => {\r\n    if (!dateString) return '';\r\n    \r\n    if (dateString.includes('-')) {\r\n      const [year, month, day] = dateString.split('-');\r\n      return `${day}/${month}/${year}`;\r\n    }\r\n    \r\n    return dateString;\r\n  };\r\n\r\n  const formatDateForBackend = (dateString: string): string => {\r\n    if (!dateString) return '';\r\n    \r\n    if (dateString.includes('/')) {\r\n      const [day, month, year] = dateString.split('/');\r\n      return `${year}-${month}-${day}`;\r\n    }\r\n    \r\n    return dateString;\r\n  };\r\n\r\n  const handleDateChange = (text: string) => {\r\n    const cleaned = text.replace(/[^0-9]/g, '');\r\n    let formatted = '';\r\n    \r\n    if (cleaned.length <= 2) {\r\n      formatted = cleaned;\r\n    } else if (cleaned.length <= 4) {\r\n      formatted = `${cleaned.slice(0, 2)}/${cleaned.slice(2)}`;\r\n    } else if (cleaned.length <= 8) {\r\n      formatted = `${cleaned.slice(0, 2)}/${cleaned.slice(2, 4)}/${cleaned.slice(4, 8)}`;\r\n    }\r\n    \r\n    onChange(formatted);\r\n  };\r\n\r\n  const displayValue = formatDateForDisplay(value);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={[styles.input, error ? styles.inputError : null]}\r\n        value={displayValue}\r\n        onChangeText={handleDateChange}\r\n        placeholder={placeholder || 'DD/MM/AAAA'}\r\n        keyboardType=\"numeric\"\r\n        maxLength={10}\r\n      />\r\n      \r\n      {error && <Text style={styles.errorText}>{error}</Text>}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginBottom: 16,\r\n  },\r\n  input: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 12,\r\n    padding: 16,\r\n    fontSize: 16,\r\n    borderWidth: 1,\r\n    borderColor: '#e1e8ed',\r\n  },\r\n  inputError: {\r\n    borderColor: '#e74c3c',\r\n  },\r\n  errorText: {\r\n    color: '#e74c3c',\r\n    fontSize: 12,\r\n    marginTop: 4,\r\n    marginLeft: 4,\r\n  },\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}