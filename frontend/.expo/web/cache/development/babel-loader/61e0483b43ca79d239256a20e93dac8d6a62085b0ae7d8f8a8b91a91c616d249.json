{"ast":null,"code":"import React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Provider } from 'react-redux';\nimport { store } from \"./src/store\";\nimport { checkAuth } from \"./src/store/slices/authSlice\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport DashboardScreen from \"./src/screens/DashboardScreen\";\nimport { useAppSelector, useAppDispatch } from \"./src/store/hooks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction AppContent() {\n  var dispatch = useAppDispatch();\n  var _useAppSelector = useAppSelector(function (state) {\n      return state.auth;\n    }),\n    isAuthenticated = _useAppSelector.isAuthenticated,\n    isLoading = _useAppSelector.isLoading;\n  useEffect(function () {\n    dispatch(checkAuth());\n  }, [dispatch]);\n  if (isLoading) {\n    return _jsx(View, {\n      style: styles.container\n    });\n  }\n  return isAuthenticated ? _jsx(DashboardScreen, {}) : _jsx(LoginScreen, {});\n}\nexport default function App() {\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(AppContent, {})\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f9fa'\n  }\n});","map":{"version":3,"names":["React","useEffect","View","StyleSheet","Provider","store","checkAuth","LoginScreen","DashboardScreen","useAppSelector","useAppDispatch","jsx","_jsx","AppContent","dispatch","_useAppSelector","state","auth","isAuthenticated","isLoading","style","styles","container","App","children","create","flex","backgroundColor"],"sources":["C:/Users/diogo/OneDrive/Desktop/learning/loja-challenge/frontend/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './src/store';\r\nimport { checkAuth } from './src/store/slices/authSlice';\r\nimport LoginScreen from './src/screens/LoginScreen';\r\nimport DashboardScreen from './src/screens/DashboardScreen';\r\nimport { useAppSelector, useAppDispatch } from './src/store/hooks';\r\n\r\nfunction AppContent() {\r\n  const dispatch = useAppDispatch();\r\n  const { isAuthenticated, isLoading } = useAppSelector(state => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(checkAuth());\r\n  }, [dispatch]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <View style={styles.container}>\r\n        {/* Loading component aqui */}\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return isAuthenticated ? <DashboardScreen /> : <LoginScreen />;\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppContent />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n}); "],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAEzC,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,KAAK;AACd,SAASC,SAAS;AAClB,OAAOC,WAAW;AAClB,OAAOC,eAAe;AACtB,SAASC,cAAc,EAAEC,cAAc;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAEnE,SAASC,UAAUA,CAAA,EAAG;EACpB,IAAMC,QAAQ,GAAGJ,cAAc,CAAC,CAAC;EACjC,IAAAK,eAAA,GAAuCN,cAAc,CAAC,UAAAO,KAAK;MAAA,OAAIA,KAAK,CAACC,IAAI;IAAA,EAAC;IAAlEC,eAAe,GAAAH,eAAA,CAAfG,eAAe;IAAEC,SAAS,GAAAJ,eAAA,CAATI,SAAS;EAElClB,SAAS,CAAC,YAAM;IACda,QAAQ,CAACR,SAAS,CAAC,CAAC,CAAC;EACvB,CAAC,EAAE,CAACQ,QAAQ,CAAC,CAAC;EAEd,IAAIK,SAAS,EAAE;IACb,OACEP,IAAA,CAACV,IAAI;MAACkB,KAAK,EAAEC,MAAM,CAACC;IAAU,CAExB,CAAC;EAEX;EAEA,OAAOJ,eAAe,GAAGN,IAAA,CAACJ,eAAe,IAAE,CAAC,GAAGI,IAAA,CAACL,WAAW,IAAE,CAAC;AAChE;AAEA,eAAe,SAASgB,GAAGA,CAAA,EAAG;EAC5B,OACEX,IAAA,CAACR,QAAQ;IAACC,KAAK,EAAEA,KAAM;IAAAmB,QAAA,EACrBZ,IAAA,CAACC,UAAU,IAAE;EAAC,CACN,CAAC;AAEf;AAEA,IAAMQ,MAAM,GAAGlB,UAAU,CAACsB,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}